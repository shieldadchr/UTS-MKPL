name: Node.js CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build-client:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.11]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Install dependencies
        run: npm install
      - name: Build Astro
        run: npm run build
      - name: SonarCloud Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Automatically created by GitHub
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npm install -g sonarqube-scanner
          sonar-scanner \
            -Dsonar.projectKey=${{ secrets.PROJECT_KEY }} \
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  build-server:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14 # Use a valid PostgreSQL image
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: supabase
          POSTGRES_USER: supabase
          POSTGRES_DB: supabase
        options: >-
          --health-cmd "pg_isready -U supabase" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Install dependencies
        run: |
          cd Database 
          npm install
      - name: Wait for Supabase to be ready
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U supabase; then
              echo "Supabase is ready!"
              break
            fi
            echo "Waiting for Supabase..."
            sleep 5
          done
      - name: generate prisma
        run: |
          cd Database
          npx prisma generate
      - name: Push database
        run: |
          cd Database 
          npm run push
      - name: Run tests
        run: |
          cd Database
          npm run test
      - name: SonarCloud Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Automatically created by GitHub
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd Database
          npm install -g sonarqube-scanner
          sonar-scanner \
            -Dsonar.projectKey=${{ secrets.PROJECT_KEY }} \
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
